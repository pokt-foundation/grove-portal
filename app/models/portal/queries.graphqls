query endpoints {
  owner: endpoints(filter: OWNER) {
    appLimits {
      dailyLimit
      planType
      publicKey
    }
    createdAt
    gigastake
    id
    name
    status
    updatedAt
    userId
    users {
      roleName
      email
      accepted
      userID
    }
  }
  admin: endpoints(filter: ADMIN) {
    appLimits {
      dailyLimit
      planType
      publicKey
    }
    createdAt
    gigastake
    id
    name
    status
    updatedAt
    userId
    users {
      roleName
      email
      accepted
    }
  }
  member: endpoints(filter: MEMBER) {
    appLimits {
      dailyLimit
      planType
      publicKey
    }
    createdAt
    gigastake
    id
    name
    status
    updatedAt
    userId
    users {
      roleName
      email
      accepted
    }
  }
}

query endpoint($endpointID: ID!) {
  endpoint(endpointID: $endpointID) {
    appLimits {
      dailyLimit
      planType
      publicKey
    }
    apps {
      address
      appId
      chain
      publicKey
      stake
      unstakingTime
      stakedTokens
      status
      jailed
    }
    createdAt
    gatewaySettings {
      secretKey
      secretKeyRequired
      whitelistBlockchains
      whitelistContracts {
        blockchainID
        contracts
      }
      whitelistMethods {
        blockchainID
        methods
      }
      whitelistOrigins
      whitelistUserAgents
    }
    gigastake
    id
    name
    notificationSettings {
      full
      half
      quarter
      signedUp
      threeQuarters
    }
    status
    updatedAt
    userId
    users {
      userID
      roleName
      email
      accepted
    }
    integrations {
      covalentAPIKeyFree
      covalentAPIKeyPaid
    }
  }
}

query endpointUser($endpointID: ID!) {
  endpoint(endpointID: $endpointID) {
    users {
      userID
      roleName
      email
      accepted
    }
  }
}

query pendingEndpoints($portalUserID: ID!) {
  pendingEndpoints(portalUserID: $portalUserID) {
    appLimits {
      dailyLimit
      planType
      publicKey
    }
    createdAt
    gigastake
    id
    name
    status
    updatedAt
    userId
    users {
      roleName
      email
      accepted
    }
  }
}

query blockchains($active: Boolean) {
  blockchains(active: $active) {
    id
    ticker
    blockchain
    blockchainAliases
    active
    description
    enforceResult
    chainIDCheck
    logLimitBlocks
    path
  }
}

query getUserJWT($username: String!, $password: String!) {
  getUserJWT(username: $username, password: $password)
}

query getPortalUserID {
  getPortalUserID
}
